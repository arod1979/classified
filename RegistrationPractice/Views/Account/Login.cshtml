@using RegistrationPractice.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}


<!-- Material form login -->
<div class="card elegantformwidth mx-auto">


    <h5 class="card-header white-text text-center py-4" style="background-color: #99D5FF;">
        <strong>Sign in</strong>
    </h5>

    <!--Card content-->
    <div class="card-body px-lg-5 pt-0">
        <br />
        @Html.ValidationSummary("", new { @class = "text-danger" })
        @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "elegantform, text-center", style = "color: #757575;" }))
        {
            @Html.AntiForgeryToken()

            <!-- Form -->


            <!-- Email -->
            <div class="md-form elegantformcontrol">
                @*<i class="fa fa-envelope prefix"></i>*@
                <input type="text" id="materialLoginFormEmail" class="form-control validate" name="email">
                <label for="materialLoginFormEmail">E-mail</label>
            </div>

            <!-- Password -->
            <div class="md-form elegantformcontrol">
                @*<i class="fa fa-lock prefix"></i>*@
                <input type="password" id="materialLoginFormPassword" class="form-control validate" name="password">
                <label for="materialLoginFormPassword">Password</label>
            </div>

            <div class="d-flex justify-content-around">
                @*<div>
                         Remember me
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" id="materialLoginFormRemember">
                            <label class="form-check-label" for="materialLoginFormRemember">Remember me</label>
                        </div>
                    </div>*@
                <div>








                </div>
            </div>

            <!-- Sign in button -->
            <button class="btn btn-outline-info  my-1 waves-effect z-depth-0" type="submit">Sign in</button>

            <!-- Register -->


            <!-- Social login -->
            @*<p>or sign in with:</p>*@
            @*
                <a type="button" class="btn-floating btn-fb btn-sm">
                    <i class="fa fa-facebook"></i>
                </a>
                <a type="button" class="btn-floating btn-tw btn-sm">
                    <i class="fa fa-twitter"></i>
                </a>
                <a type="button" class="btn-floating btn-li btn-sm">
                    <i class="fa fa-linkedin"></i>
                </a>
                <a type="button" class="btn-floating btn-git btn-sm">
                    <i class="fa fa-github"></i>
                </a>*@

        }
        <section id="socialLoginForm">
            @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
        </section>
        <!-- Form -->
        <!-- Forgot password -->
        @Html.ActionLink("Forgot your password?", "ForgotPassword")&nbsp;&nbsp;&nbsp;
        @Html.ActionLink("Register as a new user", "Register")
    </div>

</div>
<!-- Material form login -->
@*<div class="lostitems">
        @Html.ValidationSummary("", new { @class = "text-danger" })
        @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form" }))
        {
            @Html.AntiForgeryToken()

            <label style="display:block;text-align:center;" class="white">Sign-In</label>

            <input type="text" placeholder="Enter your email" name="email">

            <input type="password" placeholder="Password" name="password">

            <input type="submit" name="submit" value="Login">

            <p>
                @Html.ActionLink("Register as a new user", "Register", null, new { @class = "white" })
            </p>
            //Enable this once you have account confirmation enabled for password reset functionality


            <p>
                @Html.ActionLink("Forgot your password?", "ForgotPassword", null, new { @class = "white" })
            </p>





        }
        <section id="socialLoginForm">
            @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
        </section>

    </div>*@
@section MetaContent
{

    <link href="@Url.Content("~/Content/mdb/mdb.min.css")" rel="stylesheet" type="text/css" />
    <link href="~/Content/mdb/mdb.min.css" rel="stylesheet" />
    @*<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.11.0/umd/popper.min.js"></script>
        }*@

}
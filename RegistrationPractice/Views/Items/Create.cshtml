@model RegistrationPractice.Entities.Item

@{
    ViewBag.Title = "Create";
}



<h1 class="city">@ViewBag.city_province</h1>
<div class="form-horizontal">
    @using (Html.BeginForm("Create", "Items", FormMethod.Post, new { enctype = "multipart/form-data", @class = "simpleform" }))
    {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })




        <h1>
            @ViewBag.posttype Form
        </h1>

        <p>
            <strong>Note:</strong> When posting, keep it simple and to the point.
        </p>

        <br>
        if (ViewBag.posttype == "Lost")
        {
            <div class="www">

                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { placeholder = "What did you lose?" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
            <br /><br />
            <div class="www">
                @Html.DropDownList("CategoryID")
                @Html.ValidationMessageFor(model => model.PostTypeID, "", new { @class = "text-danger" })
            </div>
            <br>
            <br>
            <div class="www">
                @Html.EditorFor(model => model.LostLocation, new { htmlAttributes = new { placeholder = "Where did you lose it?" } })
                @Html.ValidationMessageFor(model => model.LostLocation, "", new { @class = "text-danger" })
            </div>
            <br>
            <br />
            <div class="www">
                <input type="text" name="FoundDate" id="FoundDate" placeholder="When was this lost? @System.DateTime.Now.ToShortDateString()" />
                @*@Html.EditorFor(model => model.FoundDate, new { htmlAttributes = new { placeholder = "Which Month, Day, Year?" } })*@
                @Html.ValidationMessageFor(model => model.FoundDate, "", new { @class = "text-danger datefield", type = "date" })
            </div>
            <br>
            <br />
            <div class="www">
                @Html.EditorFor(model => model.AdditionalNotes, new { htmlAttributes = new { placeholder = "ex. color, model, distinct markins, etc?", @class = "input" } })
                @Html.ValidationMessageFor(model => model.AdditionalNotes, "", new { @class = "text-danger" })
            </div>
            <br>
            <br />
            <div class="www">
                @Html.EditorFor(model => model.ItemReward, new { htmlAttributes = new { placeholder = "Reward amount: minimum 20" } })
                @Html.ValidationMessageFor(model => model.ItemReward, "", new { @class = "text-danger" })
            </div>

        }
        if (ViewBag.posttype == "Found")
        {
            <div class="www">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { placeholder = "What did you find?" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
            <br>
            <br>


            <div class="www">
                @Html.DropDownList("CategoryID")
                @Html.ValidationMessageFor(model => model.PostTypeID, "", new { @class = "text-danger" })
            </div>
            <br>
            <br>
            <div class="www">
                @Html.EditorFor(model => model.LostLocation, new { htmlAttributes = new { placeholder = "Where did you find it?" } })
                @Html.ValidationMessageFor(model => model.LostLocation, "", new { @class = "text-danger" })
            </div>
            <br>
            <br />
            <div class="www">
                <input type="text" name="FoundDate" id="FoundDate" placeholder="When was this lost? @System.DateTime.Now.ToShortDateString()" />
                @Html.ValidationMessageFor(model => model.FoundDate, "", new { @class = "text-danger" })
            </div>
            <br>
            <br />
            <div class="www">
                @Html.EditorFor(model => model.AdditionalNotes, new { htmlAttributes = new { placeholder = "ex. color, model, distinct markins, etc?", name = "FoundDate" } })
                @Html.ValidationMessageFor(model => model.AdditionalNotes, "", new { @class = "text-danger" })
            </div>

            <input type="hidden" value="20" name="ItemReward" />

        }

        if (ViewBag.posttype == "Stolen")
        {
            <div class="www">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { placeholder = "What was stolen?" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
            <br>
            <br>
            <div class="www">
                @Html.DropDownList("CategoryID")
                @Html.ValidationMessageFor(model => model.PostTypeID, "", new { @class = "text-danger" })
            </div>
            <br>
            <br>
            <div class="www">
                @Html.EditorFor(model => model.LostLocation, new { htmlAttributes = new { placeholder = "Where was it stolen from?" } })
                @Html.ValidationMessageFor(model => model.LostLocation, "", new { @class = "text-danger" })
            </div>
            <br>
            <br />
            <div class="www">
                <input type="text" name="FoundDate" id="FoundDate" placeholder="When was this lost? @System.DateTime.Now.ToShortDateString()" />
                @*<input type="text" id="FoundDate" placeholder="When was this stolen? @System.DateTime.Now.ToShortDateString()" />*@
                @Html.ValidationMessageFor(model => model.FoundDate, "", new { @class = "text-danger" })
            </div>
            <br>
            <br />
            <div class="www">
                @Html.EditorFor(model => model.AdditionalNotes, new { htmlAttributes = new { placeholder = "ex. color, model, distinct markins, etc?" } })
                @Html.ValidationMessageFor(model => model.AdditionalNotes, "", new { @class = "text-danger" })
            </div>
            <br>
            <br />
            <div class="www">
                @Html.EditorFor(model => model.ItemReward, new { htmlAttributes = new { placeholder = "Reward amount: minimum 20" } })
                @Html.ValidationMessageFor(model => model.ItemReward, "", new { @class = "text-danger" })
            </div>

        }


        <label for="files" class="custom-file-upload" style="padding:5px;">
            Upload Image File
        </label>
        <input type="file" class="custom-file-upload" name="files" id="files" multiple="multiple" accept=".jpg,.jpeg,.png" file-upload />
        <div>.jpg,.png(5MB MAX)</div>

        <div class="alert alert-danger d-none">File Could Not Be Uploaded</div>




        <div class="www-nobottom">
            <div img-preview class="thumbnail" style="display:none">
                <img class="img-fluid" target-img />
                <div class="caption">
                    <a href="#" onclick="ClearPreview()"><i class="fas fa-trash"></i> </a>
                    <p img-description></p>
                </div>
            </div>
        </div>


        @Html.HiddenFor(item => item.OwnerUserEmail)
        @Html.HiddenFor(item => item.UserId)
        @Html.HiddenFor(item => item.LocationID)
        @Html.HiddenFor(item => item.Country)
        @Html.HiddenFor(item => item.City)
        @Html.HiddenFor(item => item.PostTypeID)
        <input type="hidden" id="UpdatedActionsFileUpload" name="UpdatedActionsFileUpload" value="none" />



        <input type="hidden" value="@ViewBag.Province" name="province" />
        <input type="hidden" value="@ViewBag.PostType" name="posttypefilter" />


        @*<span class="btn btn-default btn-file">
                Browse <input type="file">
            </span>*@


        <div class="www">
            <input type="submit" class="btn btn-info" value="Submit">
        </div>
        <br>
        <br />
        @Html.DisplayText("You must login to post")
    }
</div>


@model RegistrationPractice.Entities.Item

@{
    ViewBag.Title = "Create";
}


<h1 class="city">@ViewBag.city_province</h1>
@using (Html.BeginForm("Create", "Items", FormMethod.Post, new { enctype = "multipart/form-data", @class = "simpleform" }))
{
    @Html.AntiForgeryToken()

    @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
    @Html.ValidationMessageFor(model => model.LostLocation, "", new { @class = "text-danger" })
    @Html.ValidationMessageFor(model => model.FoundDate, "", new { @class = "text-danger" })
    @Html.ValidationMessageFor(model => model.AdditionalNotes, "", new { @class = "text-danger" })
    @Html.ValidationMessageFor(model => model.ItemReward, "", new { @class = "text-danger" })

    <h1>
        @ViewBag.posttype Form
    </h1>

    <p>
        <strong>Note:</strong> When posting, keep it simple and to the point.
    </p>

    <br>
    <div class="www">
        @Html.EditorFor(model => model.Description, new { placeholder = "What did you lose?" })
    </div>
    <br>
    <br>
    <div class="www">
        @Html.EditorFor(model => model.LostLocation, new { placeholder = "Where did you lose it?" })
    </div>
    <br>
    <br />
    <div class="www">
        @Html.EditorFor(model => model.FoundDate, new { placeholder = "Which Month, Day, Year?" })
    </div>
    <br>
    <br />
    <div class="www">
        @Html.EditorFor(model => model.AdditionalNotes, new { placeholder = "ex. color, model, distinct markins, etc?" })
    </div>
    <br>
    <br />
    <div class="www">
        @Html.EditorFor(model => model.ItemReward, new { placeholder = "ex. color, model, distinct markins, etc?" })
    </div>
    <br>
    <br />



    <div class="form-group upload-file-interface">
        @Html.LabelFor(model => model.imageURL, htmlAttributes: new { @class = "control-label col-md-2 " })

        <div class="col-md-4">

            <div class="btn btn-primary">
                <input type="file" name="files" id="files" multiple="multiple" accept=".jpg,.jpeg,.png" file-upload />
            </div>
            <div>.jpg,.png (5MB MAX)</div>

            <div class="alert alert-danger hidden">File Could Not Be Uploaded</div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-2 col-md-offset-2">
            <div img-preview class="thumbnail" style="display:none">
                <img class="img-responsive" target-img />
                <div class="caption">
                    <a href="#" onclick="ClearPreview()"><i class="glyphicon glyphicon-trash"></i> </a>
                    <p img-description></p>
                </div>
            </div>
        </div>
    </div>
    <br>
    <br>
    <div class="www">
        <input type="submit" />
    </div>
    <br>
    <br />
}
@Html.DisplayText("You must login to post")
@Html.HiddenFor(item => item.OwnerUserEmail)
@Html.HiddenFor(item => item.LocationID)*@


<div class="form-horizontal">

                    <h4>Item</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group">
                        @Html.LabelFor(model => model.PostType, "What Happened?", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("PostTypeId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.PostType, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ItemReward, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ItemReward, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ItemReward, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })

                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>




                    <div class="form-group">
                        @Html.LabelFor(model => model.LocationID, "Location", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("LocationId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.LocationID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CategoryID, "Category", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.AdditionalNotes, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.AdditionalNotes, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AdditionalNotes, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group upload-file-interface">
                        @Html.LabelFor(model => model.imageURL, htmlAttributes: new { @class = "control-label col-md-2 " })

                        <div class="col-md-4">

                            <div class="btn btn-primary">
                                <input type="file" name="files" id="files" multiple="multiple" accept=".jpg,.jpeg,.png" file-upload />
                            </div>
                            <div>.jpg,.png (5MB MAX)</div>

                            <div class="alert alert-danger hidden">File Could Not Be Uploaded</div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-2 col-md-offset-2">
                            <div img-preview class="thumbnail" style="display:none">
                                <img class="img-responsive" target-img />
                                <div class="caption">
                                    <a href="#" onclick="ClearPreview()"><i class="glyphicon glyphicon-trash"></i> </a>
                                    <p img-description></p>
                                </div>
                            </div>
                        </div>
                    </div>



                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>
                </div>
                    @Html.HiddenFor(item=>item.OwnerUserEmail)
        }


        <div>
            @Html.ActionLink("Back to List", "Index")
    </div>
